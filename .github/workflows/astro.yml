# Sample workflow for building and deploying an Astro site to GitHub Pages
#
# To get started with Astro see: https://docs.astro.build/en/getting-started/
#
name: Deploy Astro site to FTP

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  BUILD_PATH: "." # default value when not using subfolders

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: ${{ env.BUILD_PATH }}/package-lock.json
      - name: Install dependencies
        run: "npm install"
        working-directory: ${{ env.BUILD_PATH }}
      - name: Build with Astro
        run: "npm run build"
        working-directory: ${{ env.BUILD_PATH }}
      - name: Archive Built Files
        uses: actions/upload-artifact@v4
        with:
          name: built-files
          path: ./dist
  deploy:
    needs: build
    runs-on: ubuntu-latest
    name: Deploy
    steps:
      - name: Download Built Files
        uses: actions/download-artifact@v4
        with:
          name: built-files
          path: ./dist

      - name: FTP Deploy
        # You may pin to the exact commit or the version.
        # uses: SamKirkland/FTP-Deploy-Action@8a24039354ee91000cb948cb4a1dbdf1a1b94a3c
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          # ftp server
          server: ${{secrets.FTP_SERVER}}
          # ftp username
          username: ${{secrets.FTP_USER}}
          # ftp password
          password: ${{secrets.FTP_PASSWORD}}
          # Server port to connect to (read your web hosts docs)
          #port: # optional
          # protocol to deploy with - ftp, ftps, or ftps-legacy
          protocol: ftps
          # Folder to upload from, must end with trailing slash /
          local-dir: ./dist/
          # Path to upload to on the server. Must end with trailing slash /
          #server-dir: # optional
          # Path and name of the state file - this file is used to track which files have been deployed
          #state-name: # optional
          # Prints which modifications will be made with current config options, but doesnt actually make any changes
          #dry-run: # optional
          # Deletes ALL contents of server-dir, even items in excluded with exclude argument
          #dangerous-clean-slate: # optional
          # An array of glob patterns, these files will not be included in the publish/delete process
          #exclude: # optional
          # How verbose should the information be - minimal, standard, or verbose
          #log-level: # optional
          # strict or loose
          security: loose
          # Timeout in milliseconds for FTP operations
          #timeout: # optional
